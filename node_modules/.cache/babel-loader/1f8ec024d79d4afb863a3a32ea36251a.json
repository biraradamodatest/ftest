{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IT\\\\Documents\\\\GitHub\\\\coll2030\\\\src\\\\SearchBox.js\";\nimport * as React from 'react';\nimport Checkbox from '@mui/material/Checkbox';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst icon = /*#__PURE__*/_jsxDEV(CheckBoxOutlineBlankIcon, {\n  fontSize: \"small\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 14\n}, this);\n\nconst checkedIcon = /*#__PURE__*/_jsxDEV(CheckBoxIcon, {\n  fontSize: \"small\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 21\n}, this);\n\nexport default function SearchBox() {\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    multiple: true,\n    id: \"checkboxes-tags-demo\",\n    options: top100Films,\n    disableCloseOnSelect: true,\n    getOptionLabel: option => option.title,\n    renderOption: (props, option, _ref) => {\n      let {\n        selected\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"li\", { ...props,\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          icon: icon,\n          checkedIcon: checkedIcon,\n          style: {\n            marginRight: 8\n          },\n          checked: selected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), option.title, /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginLeft: 'auto'\n          },\n          children: \"category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this);\n    },\n    style: {\n      width: 500\n    },\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n      label: \"\\xDCr\\xFCnler\",\n      placeholder: \"Favorites\",\n      sx: {\n        width: ''\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n} // Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\n\n_c = SearchBox;\nconst top100Films = [{\n  title: 'The Shawshank Redemption',\n  year: 1994\n}, {\n  title: 'The Godfather',\n  year: 1972\n}, {\n  title: 'The Godfather: Part II',\n  year: 1974\n}, {\n  title: 'The Dark Knight',\n  year: 2008\n}, {\n  title: '12 Angry Men',\n  year: 1957\n}, {\n  title: \"Schindler's List\",\n  year: 1993\n}, {\n  title: 'Pulp Fiction',\n  year: 1994\n}, {\n  title: 'The Lord of the Rings: The Return of the King',\n  year: 2003\n}, {\n  title: 'The Good, the Bad and the Ugly',\n  year: 1966\n}, {\n  title: 'Fight Club',\n  year: 1999\n}, {\n  title: 'The Lord of the Rings: The Fellowship of the Ring',\n  year: 2001\n}, {\n  title: 'Star Wars: Episode V - The Empire Strikes Back',\n  year: 1980\n}, {\n  title: 'Forrest Gump',\n  year: 1994\n}, {\n  title: 'Inception',\n  year: 2010\n}, {\n  title: 'The Lord of the Rings: The Two Towers',\n  year: 2002\n}, {\n  title: \"One Flew Over the Cuckoo's Nest\",\n  year: 1975\n}, {\n  title: 'Goodfellas',\n  year: 1990\n}, {\n  title: 'The Matrix',\n  year: 1999\n}, {\n  title: 'Seven Samurai',\n  year: 1954\n}, {\n  title: 'Star Wars: Episode IV - A New Hope',\n  year: 1977\n}, {\n  title: 'City of God',\n  year: 2002\n}, {\n  title: 'Se7en',\n  year: 1995\n}, {\n  title: 'The Silence of the Lambs',\n  year: 1991\n}, {\n  title: \"It's a Wonderful Life\",\n  year: 1946\n}, {\n  title: 'Life Is Beautiful',\n  year: 1997\n}, {\n  title: 'The Usual Suspects',\n  year: 1995\n}, {\n  title: 'Léon: The Professional',\n  year: 1994\n}, {\n  title: 'Spirited Away',\n  year: 2001\n}, {\n  title: 'Saving Private Ryan',\n  year: 1998\n}, {\n  title: 'Once Upon a Time in the West',\n  year: 1968\n}, {\n  title: 'American History X',\n  year: 1998\n}, {\n  title: 'Interstellar',\n  year: 2014\n}];\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBox\");","map":{"version":3,"names":["React","Checkbox","TextField","Autocomplete","CheckBoxOutlineBlankIcon","CheckBoxIcon","icon","checkedIcon","SearchBox","top100Films","option","title","props","selected","marginRight","marginLeft","width","params","year"],"sources":["C:/Users/IT/Documents/GitHub/coll2030/src/SearchBox.js"],"sourcesContent":["import * as React from 'react';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nexport default function SearchBox() {\r\n  return (\r\n\r\n \r\n    <Autocomplete\r\n \r\n      multiple\r\n      id=\"checkboxes-tags-demo\"\r\n      options={top100Films}\r\n      disableCloseOnSelect\r\n      getOptionLabel={(option) => option.title}\r\n      renderOption={(props, option, { selected }) => (\r\n        <li {...props}>\r\n          <Checkbox\r\n          \r\n            icon={icon}\r\n            checkedIcon={checkedIcon}\r\n            style={{ marginRight: 8 }}\r\n            checked={selected}\r\n          />\r\n          {option.title}<span style={{ marginLeft:'auto'}}>category</span>\r\n        </li>\r\n      )}\r\n      style={{ width: 500 }}\r\n      renderInput={(params) => (\r\n        <TextField {...params} label=\"Ürünler\" placeholder=\"Favorites\" sx={{width:''}} />\r\n      )}\r\n    />\r\n \r\n \r\n  );\r\n}\r\n\r\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\r\nconst top100Films = [\r\n  { title: 'The Shawshank Redemption', year: 1994 },\r\n  { title: 'The Godfather', year: 1972 },\r\n  { title: 'The Godfather: Part II', year: 1974 },\r\n  { title: 'The Dark Knight', year: 2008 },\r\n  { title: '12 Angry Men', year: 1957 },\r\n  { title: \"Schindler's List\", year: 1993 },\r\n  { title: 'Pulp Fiction', year: 1994 },\r\n  {\r\n    title: 'The Lord of the Rings: The Return of the King',\r\n    year: 2003,\r\n  },\r\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\r\n  { title: 'Fight Club', year: 1999 },\r\n  {\r\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\r\n    year: 2001,\r\n  },\r\n  {\r\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\r\n    year: 1980,\r\n  },\r\n  { title: 'Forrest Gump', year: 1994 },\r\n  { title: 'Inception', year: 2010 },\r\n  {\r\n    title: 'The Lord of the Rings: The Two Towers',\r\n    year: 2002,\r\n  },\r\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\r\n  { title: 'Goodfellas', year: 1990 },\r\n  { title: 'The Matrix', year: 1999 },\r\n  { title: 'Seven Samurai', year: 1954 },\r\n  {\r\n    title: 'Star Wars: Episode IV - A New Hope',\r\n    year: 1977,\r\n  },\r\n  { title: 'City of God', year: 2002 },\r\n  { title: 'Se7en', year: 1995 },\r\n  { title: 'The Silence of the Lambs', year: 1991 },\r\n  { title: \"It's a Wonderful Life\", year: 1946 },\r\n  { title: 'Life Is Beautiful', year: 1997 },\r\n  { title: 'The Usual Suspects', year: 1995 },\r\n  { title: 'Léon: The Professional', year: 1994 },\r\n  { title: 'Spirited Away', year: 2001 },\r\n  { title: 'Saving Private Ryan', year: 1998 },\r\n  { title: 'Once Upon a Time in the West', year: 1968 },\r\n  { title: 'American History X', year: 1998 },\r\n  { title: 'Interstellar', year: 2014 },\r\n];\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}