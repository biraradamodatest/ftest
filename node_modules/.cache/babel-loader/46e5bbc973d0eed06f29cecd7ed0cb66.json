{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IT\\\\Documents\\\\GitHub\\\\coll2030\\\\src\\\\ProductImageList.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport Grid from '@mui/material/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProductImageList() {\n  _s();\n\n  const [state, setData] = useState({\n    products: []\n  });\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  async function fetchData() {\n    const gender = localStorage.getItem('gender');\n    const subcategory = localStorage.getItem('subcategory');\n    const category = localStorage.getItem('category');\n    const url = `/.netlify/functions/atlas?gender=${gender}&category=${category}&subcategory=pantolon&page=${100}`;\n    const response = await fetch(url, {\n      cache: 'default'\n    });\n    const {\n      data\n    } = await response.json();\n    setData({\n      products: data\n    });\n    console.log(data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justifyContent: \"center\",\n    spacing: 1,\n    sx: {\n      height: \"200px\"\n    },\n    children: state.products.map((item, i) => {\n      debugger;\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(ImageComponent, {\n          plcHolder: item.plcHolder,\n          imageUrl: item.imageUrl,\n          title: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductImageList, \"DYMhYu+XtAwTHFsnF1afBjGzOYY=\");\n\n_c = ProductImageList;\n\nfunction ImageComponent(props) {\n  _s2();\n\n  const imageEl = useRef(null);\n  useEffect(() => {\n    if (window.IntersectionObserver) {\n      let observer = new IntersectionObserver((entries, observer) => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            //  console.log(entry);\n            entry.target.src = entry.target.dataset.src;\n            observer.unobserve(entry.target);\n          }\n        });\n      }, {\n        threshold: 0.1\n      });\n      window.obz = observer;\n      window.obz.observe(this.querySelector('img'));\n    }\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: props.plcHolder,\n    \"data-src\": 'https://res.cloudinary.com/codergihub/image/fetch/w_250/' + props.imageUrl,\n    alt: props.title,\n    loading: \"lazy\",\n    width: \"250\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ImageComponent, \"5ZOT5nfFeGHZZIfSn52hZV7XqdA=\");\n\n_c2 = ImageComponent;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProductImageList\");\n$RefreshReg$(_c2, \"ImageComponent\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Grid","ProductImageList","state","setData","products","fetchData","gender","localStorage","getItem","subcategory","category","url","response","fetch","cache","data","json","console","log","height","map","item","i","plcHolder","imageUrl","title","ImageComponent","props","imageEl","window","IntersectionObserver","observer","entries","forEach","entry","isIntersecting","target","src","dataset","unobserve","threshold","obz","observe","querySelector"],"sources":["C:/Users/IT/Documents/GitHub/coll2030/src/ProductImageList.js"],"sourcesContent":["\r\n\r\n\r\n\r\nimport React, { useEffect, useState,useRef } from 'react';\r\n\r\nimport Grid from '@mui/material/Grid'\r\nexport default function ProductImageList() {\r\n  const [state, setData] = useState({ products: [] });\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    fetchData()\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  async function fetchData() {\r\n    const gender = localStorage.getItem('gender')\r\n    const subcategory = localStorage.getItem('subcategory')\r\n    const category = localStorage.getItem('category')\r\n    const url = `/.netlify/functions/atlas?gender=${gender}&category=${category}&subcategory=pantolon&page=${100}`\r\n\r\n    const response = await fetch(url, { cache: 'default' })\r\n\r\n    const { data } = await response.json()\r\n\r\n    setData({ products: data })\r\n    console.log(data)\r\n\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <Grid container justifyContent=\"center\" spacing={1} sx={{ height: \"200px\" }}\r\n    >\r\n      {state.products.map((item, i) => {\r\n        debugger;\r\n        return <Grid item key={i} >\r\n          <ImageComponent plcHolder={item.plcHolder} imageUrl={item.imageUrl} title={item.title} />\r\n        </Grid>\r\n      })}\r\n    </Grid>\r\n\r\n\r\n  );\r\n}\r\n\r\n\r\nfunction ImageComponent(props) {\r\n  const imageEl = useRef(null);\r\n  useEffect(() => {\r\n   \r\n      if (window.IntersectionObserver) {\r\n\r\n        let observer = new IntersectionObserver((entries, observer) => {\r\n          entries.forEach(entry => {\r\n            if (entry.isIntersecting) {\r\n              //  console.log(entry);\r\n              entry.target.src = entry.target.dataset.src;\r\n              observer.unobserve(entry.target);\r\n            }\r\n          });\r\n        }, { threshold: 0.1 });\r\n        window.obz = observer\r\n        window.obz.observe(this.querySelector('img'))\r\n\r\n      }\r\n    \r\n\r\n  }, [props]);\r\n  return (\r\n    <img\r\n      src={props.plcHolder}\r\n      data-src={'https://res.cloudinary.com/codergihub/image/fetch/w_250/' + props.imageUrl}\r\n      alt={props.title}\r\n      loading=\"lazy\"\r\n      width=\"250\"\r\n    />\r\n  )\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}